[connection]
host = "127.0.0.1"
port = 8000

[ui]
buffer_size = 1000
show_timestamps = true
command_echo_color = "#ffffff"
countdown_icon = "ïƒˆ"

# Text selection settings
selection_enabled = true
selection_respect_window_boundaries = true
selection_bg_color = "#4a4a4a"

# Drag and drop settings
drag_modifier_key = "ctrl"  # Modifier key required for drag and drop: "ctrl", "alt", "shift", or "none"

[ui.command_input]
row = 27
col = 0
height = 3
width = 120
show_border = true
border_style = "double"
border_color = "#00ff00"
title = "Command"

[ui.layout]

[[ui.prompt_colors]]
character = "R"
color = "#ff0000"

[[ui.prompt_colors]]
character = "S"
color = "#ffff00"

[[ui.prompt_colors]]
character = "H"
color = "#9370db"

[[ui.prompt_colors]]
character = ">"
color = "#a9a9a9"

[presets]
whisper = { fg = "#60b4bf" }
links = { fg = "#477ab3" }
speech = { fg = "#53a684" }
roomName = { fg = "#9BA2B2", bg = "#395573" }
monsterbold = { fg = "#a29900" }
familiar = { fg = "#767339" }
thought = { fg = "#FF8080" }

[keybinds]
# Command input
enter = "send_command"
left = "cursor_left"
right = "cursor_right"
"ctrl+left" = "cursor_word_left"
"ctrl+right" = "cursor_word_right"
home = "cursor_home"
end = "cursor_end"
backspace = "cursor_backspace"
delete = "cursor_delete"

# Window management
tab = "switch_current_window"
"alt+page_up" = "scroll_current_window_up_one"
"alt+page_down" = "scroll_current_window_down_one"
page_up = "scroll_current_window_up_page"
page_down = "scroll_current_window_down_page"

# History
up = "previous_command"
down = "next_command"

# Search
"ctrl+f" = "start_search"
"ctrl+page_up" = "prev_search_match"
"ctrl+page_down" = "next_search_match"

# Numpad movement
num_1 = { macro_text = "sw\r" }
num_2 = { macro_text = "s\r" }
num_3 = { macro_text = "se\r" }
num_4 = { macro_text = "w\r" }
num_5 = { macro_text = "out\r" }
num_6 = { macro_text = "e\r" }
num_7 = { macro_text = "nw\r" }
num_8 = { macro_text = "n\r" }
num_9 = { macro_text = "ne\r" }
num_0 = { macro_text = "down\r" }
"num_." = { macro_text = "up\r" }
"num_+" = { macro_text = "look\r" }
"num_-" = { macro_text = "info\r" }
"num_*" = { macro_text = "exp\r" }
"num_/" = { macro_text = "health\r" }

# Numpad + Shift (peer)
"shift+num_1" = { macro_text = "peer sw\r" }
"shift+num_2" = { macro_text = "peer s\r" }
"shift+num_3" = { macro_text = "peer se\r" }
"shift+num_4" = { macro_text = "peer w\r" }
"shift+num_5" = { macro_text = "peer out\r" }
"shift+num_6" = { macro_text = "peer e\r" }
"shift+num_7" = { macro_text = "peer nw\r" }
"shift+num_8" = { macro_text = "peer n\r" }
"shift+num_9" = { macro_text = "peer ne\r" }
"shift+num_0" = { macro_text = "peer down\r" }
"shift+num_." = { macro_text = "peer up\r" }

# Performance
f12 = "toggle_performance_stats"

[highlights]
# Example combat highlight
swing = { pattern = "You swing.*", fg = "#ff0000", bold = true }

# Highlight player names in magenta (FAST with Aho-Corasick!)
friends = { pattern = "Mandrill|Monolis|Chiora|Exdeo|Kawhi|Aldhelm", fg = "#ff00ff", bold = true, fast_parse = true }

# Highlight enemies with background color (FAST with Aho-Corasick!)
enemies = { pattern = "Sihtric|Ehria|Ayvain|Deddalus|Daluthas", fg = "#ffffff", bg = "#8b0000", bold = true, fast_parse = true }

# Example highlight with sound (place sound files in ~/.vellum-fe/sounds/)
# death_alert = { pattern = ".*dies.*", fg = "#ffffff", bg = "#ff0000", bold = true, color_entire_line = true, sound = "death.wav", sound_volume = 0.8 }

[sound]
# Sound configuration
enabled = true          # Enable/disable all sounds
volume = 0.7            # Master volume (0.0 to 1.0)
cooldown_ms = 500       # Cooldown between same sound plays (milliseconds)

#==============================================================================
# Event Patterns
#==============================================================================
# Configurable patterns for detecting game events and updating UI state
# Similar to highlights, but triggers state changes instead of just coloring text
#
# event_type: "stun", "webbed", "prone", etc.
# action: "set" (activate), "clear" (deactivate), "increment" (add to value)
# duration: hardcoded duration in seconds (optional)
# duration_capture: regex capture group number for extracting duration (optional)
# duration_multiplier: multiply captured value (e.g., 5.0 for rounds->seconds)
# enabled: true/false to enable/disable pattern

[event_patterns]

# Primary stun detection - extracts rounds from message and converts to seconds
[event_patterns.stun_rounds]
pattern = '^\s*You are stunned for ([0-9]+) rounds?'
event_type = "stun"
action = "set"
duration_capture = 1          # Capture group 1 = number of rounds
duration_multiplier = 5.0     # 1 round = 5 seconds
enabled = true

# Shadow Valley exit stun (hardcoded duration from Profanity)
[event_patterns.stun_shadow_valley]
pattern = 'Just as you think the falling will never end, you crash through an ethereal barrier'
event_type = "stun"
action = "set"
duration = 16                 # Profanity uses 16.2s
enabled = true

# Raise dead stun (hardcoded duration from Profanity)
[event_patterns.stun_raise_dead]
pattern = 'Your surroundings grow dim\.\.\.you lapse into a state of awareness only'
event_type = "stun"
action = "set"
duration = 31                 # Profanity uses 30.6s
enabled = true

# Stun recovery message
[event_patterns.stun_recovery]
pattern = 'You recover from being stunned\.'
event_type = "stun"
action = "clear"
enabled = true

# Example: Web entanglement (future - requires indicator support)
# [event_patterns.web_trapped]
# pattern = 'You become entangled in a mass of sticky webbing!'
# event_type = "webbed"
# action = "set"
# duration = 5
# enabled = false

# Example: Knocked down (future - requires indicator support)
# [event_patterns.knocked_down]
# pattern = 'You are knocked to the ground!'
# event_type = "prone"
# action = "set"
# enabled = false
